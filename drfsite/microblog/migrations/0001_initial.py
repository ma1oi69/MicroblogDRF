# Generated by Django 4.2.7 on 2024-01-04 21:33

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('sex', models.CharField(max_length=5)),
                ('avatar', models.ImageField(blank=True, upload_to='avatars/')),
                ('country', models.CharField(choices=[('PE', 'Peru'), ('ZM', 'Zambia'), ('CR', 'Costa Rica'), ('DM', 'Dominica'), ('JO', 'Jordan'), ('MG', 'Madagascar'), ('CL', 'Chile'), ('MU', 'Mauritius'), ('RO', 'Romania'), ('IS', 'Iceland'), ('VC', 'St Vincent/Grenadines'), ('EG', 'Egypt'), ('CZ', 'Czech Republic'), ('TD', 'Chad'), ('NU', 'Niue'), ('AQ', 'Antarctica'), ('CA', 'Canada'), ('TV', 'Tuvalu'), ('YT', 'Mayotte'), ('NL', 'Netherlands'), ('NG', 'Nigeria'), ('AO', 'Angola'), ('BW', 'Botswana'), ('SA', 'Saudi Arabia'), ('PK', 'Pakistan'), ('TP', 'East Timor'), ('SM', 'San Marino'), ('GA', 'Gabon'), ('TR', 'Turkey'), ('TT', 'Trinidad And Tobago'), ('YE', 'Yemen'), ('KH', 'Cambodia'), ('MQ', 'Martinique'), ('TJ', 'Tajikistan'), ('BA', 'Bosnia And Herzegowina'), ('GW', 'Guinea-bissau'), ('ML', 'Mali'), ('IN', 'India'), ('OM', 'Oman'), ('VI', 'Virgin Islands (U.S.)'), ('BT', 'Bhutan'), ('KM', 'Comoros'), ('KP', 'Korea (North)'), ('GR', 'Greece'), ('GF', 'French Guiana'), ('PR', 'Puerto Rico'), ('BG', 'Bulgaria'), ('CC', 'Cocos Islands'), ('VG', 'Virgin Islands (British)'), ('AS', 'American Samoa'), ('LV', 'Latvia'), ('SV', 'El Salvador'), ('IR', 'Iran'), ('BN', 'Brunei Darussalam'), ('PF', 'French Polynesia'), ('MP', 'Northern Mariana Islands'), ('MX', 'Mexico'), ('TO', 'Tonga'), ('SK', 'Slovakia'), ('HT', 'Haiti'), ('LC', 'Saint Lucia'), ('UK', 'United Kingdom'), ('DZ', 'Algeria'), ('CV', 'Cape Verde'), ('AG', 'Antigua And Barbuda'), ('FI', 'Finland'), ('LB', 'Lebanon'), ('WS', 'Samoa'), ('MO', 'Macau'), ('AI', 'Anguilla'), ('SR', 'Suriname'), ('TK', 'Tokelau'), ('GL', 'Greenland'), ('UY', 'Uruguay'), ('SC', 'Seychelles'), ('TN', 'Tunisia'), ('LA', 'Laos'), ('QA', 'Qatar'), ('LK', 'Sri Lanka'), ('LT', 'Lithuania'), ('SD', 'Sudan'), ('MW', 'Malawi'), ('KI', 'Kiribati'), ('LU', 'Luxembourg'), ('GU', 'Guam'), ('PW', 'Palau'), ('MK', 'Macedonia'), ('ID', 'Indonesia'), ('BF', 'Burkina Faso'), ('ES', 'Spain'), ('ER', 'Eritrea'), ('TF', 'French S. Territories'), ('PT', 'Portugal'), ('CN', 'China'), ('CK', 'Cook Islands'), ('KN', 'Saint Kitts And Nevis'), ('RU', 'Russian Federation'), ('TG', 'Togo'), ('SN', 'Senegal'), ('BI', 'Burundi'), ('IE', 'Ireland'), ('SH', 'St. Helena'), ('EH', 'Western Sahara'), ('CO', 'Colombia'), ('CY', 'Cyprus'), ('GI', 'Gibraltar'), ('KE', 'Kenya'), ('SB', 'Solomon Islands'), ('BM', 'Bermuda'), ('BJ', 'Benin'), ('NE', 'Niger'), ('SO', 'Somalia'), ('NF', 'Norfolk Island'), ('PY', 'Paraguay'), ('MZ', 'Mozambique'), ('ZW', 'Zimbabwe'), ('FM', 'Micronesia'), ('UG', 'Uganda'), ('MS', 'Montserrat'), ('SL', 'Sierra Leone'), ('KR', 'Korea (South)'), ('GD', 'Grenada'), ('KW', 'Kuwait'), ('TM', 'Turkmenistan'), ('NR', 'Nauru'), ('BE', 'Belgium'), ('CX', 'Christmas Island'), ('IL', 'Israel'), ('GQ', 'Equatorial Guinea'), ('TH', 'Thailand'), ('FR', 'France'), ('LY', 'Libya'), ('MT', 'Malta'), ('DE', 'Germany'), ('AN', 'Netherlands Antilles'), ('SZ', 'Swaziland'), ('CH', 'Switzerland'), ('BR', 'Brazil'), ('LI', 'Liechtenstein'), ('PN', 'Pitcairn'), ('EC', 'Ecuador'), ('PA', 'Panama'), ('CF', 'Central African Rep'), ('VN', 'Viet Nam'), ('LR', 'Liberia'), ('BY', 'Belarus'), ('NC', 'New Caledonia'), ('CU', 'Cuba'), ('VE', 'Venezuela'), ('AU', 'Australia'), ('GT', 'Guatemala'), ('ZA', 'South Africa'), ('BV', 'Bouvet Island'), ('JM', 'Jamaica'), ('BO', 'Bolivia'), ('NZ', 'New Zealand'), ('RW', 'Rwanda'), ('AR', 'Argentina'), ('CI', 'Cote D`ivoire'), ('TW', 'Taiwan'), ('NA', 'Namibia'), ('IQ', 'Iraq'), ('MD', 'Moldova'), ('LS', 'Lesotho'), ('IT', 'Italy'), ('GY', 'Guyana'), ('YU', 'Yugoslavia'), ('HK', 'Hong Kong'), ('KY', 'Cayman Islands'), ('AT', 'Austria'), ('GP', 'Guadeloupe'), ('PM', 'St.Pierre'), ('FK', 'Falkland Islands (Malvinas)'), ('HN', 'Honduras'), ('MM', 'Myanmar'), ('DK', 'Denmark'), ('AM', 'Armenia'), ('SY', 'Syrian Arab Republic'), ('MA', 'Morocco'), ('GN', 'Guinea'), ('SG', 'Singapore'), ('MV', 'Maldives'), ('BB', 'Barbados'), ('NP', 'Nepal'), ('ZR', 'Zaire'), ('KZ', 'Kazakhstan'), ('GE', 'Georgia'), ('FO', 'Faroe Islands'), ('UA', 'Ukraine'), ('VA', 'Vatican City State'), ('AE', 'United Arab Emirates'), ('KG', 'Kyrgyzstan'), ('RE', 'Reunion'), ('UZ', 'Uzbekistan'), ('HR', 'Croatia'), ('NI', 'Nicaragua'), ('GH', 'Ghana'), ('MN', 'Mongolia'), ('TZ', 'Tanzania'), ('NO', 'Norway'), ('MC', 'Monaco'), ('VU', 'Vanuatu'), ('ET', 'Ethiopia'), ('CG', 'Congo'), ('SI', 'Slovenia'), ('GM', 'Gambia'), ('PH', 'Philippines'), ('BD', 'Bangladesh'), ('DJ', 'Djibouti'), ('AW', 'Aruba'), ('FJ', 'Fiji'), ('MR', 'Mauritania'), ('BZ', 'Belize'), ('EE', 'Estonia'), ('HU', 'Hungary'), ('AZ', 'Azerbaijan'), ('US', 'United States'), ('AL', 'Albania'), ('BH', 'Bahrain'), ('ST', 'Sao Tome'), ('AD', 'Andorra'), ('MH', 'Marshall Islands'), ('BS', 'Bahamas'), ('MY', 'Malaysia'), ('AF', 'Afghanistan'), ('PG', 'Papua New Guinea'), ('JP', 'Japan'), ('SE', 'Sweden'), ('PL', 'Poland'), ('DO', 'Dominican Republic'), ('CM', 'Cameroon')], max_length=30)),
                ('age', models.IntegerField(default=0)),
                ('date_of_birthday', models.DateTimeField(auto_now_add=True)),
                ('about', models.CharField(max_length=120)),
                ('is_active', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Comments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('like', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Twits',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=400)),
                ('like', models.IntegerField(default=0)),
                ('repost', models.IntegerField(default=0)),
                ('answers', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='twits', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TwitsComments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('comments', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='microblog.comments')),
                ('tweets_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tweets', to='microblog.twits')),
            ],
        ),
        migrations.CreateModel(
            name='Retweets',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('tweets_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='retweets', to='microblog.twits')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='retweets', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Follower',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('followers', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='followers', to=settings.AUTH_USER_MODEL)),
                ('subscriptions', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscribers', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='comments',
            name='tweet',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='microblog.twits'),
        ),
    ]
