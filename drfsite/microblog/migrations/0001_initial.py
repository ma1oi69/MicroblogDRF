# Generated by Django 4.2.7 on 2024-01-30 19:08

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('sex', models.CharField(max_length=5)),
                ('country', models.CharField(choices=[('TG', 'Togo'), ('KR', 'Korea (South)'), ('NI', 'Nicaragua'), ('SR', 'Suriname'), ('TD', 'Chad'), ('GF', 'French Guiana'), ('AM', 'Armenia'), ('YT', 'Mayotte'), ('ZR', 'Zaire'), ('VC', 'St Vincent/Grenadines'), ('AO', 'Angola'), ('NF', 'Norfolk Island'), ('VI', 'Virgin Islands (U.S.)'), ('BT', 'Bhutan'), ('CM', 'Cameroon'), ('TZ', 'Tanzania'), ('IS', 'Iceland'), ('SD', 'Sudan'), ('KH', 'Cambodia'), ('TR', 'Turkey'), ('TP', 'East Timor'), ('GL', 'Greenland'), ('AG', 'Antigua And Barbuda'), ('CR', 'Costa Rica'), ('DE', 'Germany'), ('AE', 'United Arab Emirates'), ('CA', 'Canada'), ('QA', 'Qatar'), ('RE', 'Reunion'), ('MX', 'Mexico'), ('GP', 'Guadeloupe'), ('FM', 'Micronesia'), ('MC', 'Monaco'), ('PK', 'Pakistan'), ('AZ', 'Azerbaijan'), ('CO', 'Colombia'), ('US', 'United States'), ('UG', 'Uganda'), ('VE', 'Venezuela'), ('PT', 'Portugal'), ('AW', 'Aruba'), ('PY', 'Paraguay'), ('AS', 'American Samoa'), ('MQ', 'Martinique'), ('SA', 'Saudi Arabia'), ('SB', 'Solomon Islands'), ('ML', 'Mali'), ('LY', 'Libya'), ('GN', 'Guinea'), ('TO', 'Tonga'), ('IN', 'India'), ('TJ', 'Tajikistan'), ('TV', 'Tuvalu'), ('HR', 'Croatia'), ('GQ', 'Equatorial Guinea'), ('GI', 'Gibraltar'), ('BB', 'Barbados'), ('LT', 'Lithuania'), ('MW', 'Malawi'), ('TF', 'French S. Territories'), ('BI', 'Burundi'), ('NE', 'Niger'), ('KI', 'Kiribati'), ('CY', 'Cyprus'), ('CG', 'Congo'), ('BH', 'Bahrain'), ('BV', 'Bouvet Island'), ('IE', 'Ireland'), ('FJ', 'Fiji'), ('PL', 'Poland'), ('MM', 'Myanmar'), ('BZ', 'Belize'), ('ER', 'Eritrea'), ('ES', 'Spain'), ('BD', 'Bangladesh'), ('HN', 'Honduras'), ('HT', 'Haiti'), ('KP', 'Korea (North)'), ('UK', 'United Kingdom'), ('SK', 'Slovakia'), ('YE', 'Yemen'), ('GT', 'Guatemala'), ('PF', 'French Polynesia'), ('KG', 'Kyrgyzstan'), ('SH', 'St. Helena'), ('LK', 'Sri Lanka'), ('GA', 'Gabon'), ('BR', 'Brazil'), ('GH', 'Ghana'), ('PM', 'St.Pierre'), ('BS', 'Bahamas'), ('BM', 'Bermuda'), ('ID', 'Indonesia'), ('LU', 'Luxembourg'), ('LA', 'Laos'), ('MO', 'Macau'), ('CH', 'Switzerland'), ('KM', 'Comoros'), ('SV', 'El Salvador'), ('TK', 'Tokelau'), ('GE', 'Georgia'), ('CL', 'Chile'), ('DK', 'Denmark'), ('MU', 'Mauritius'), ('CI', 'Cote D`ivoire'), ('NU', 'Niue'), ('EH', 'Western Sahara'), ('AT', 'Austria'), ('MK', 'Macedonia'), ('VA', 'Vatican City State'), ('TM', 'Turkmenistan'), ('SZ', 'Swaziland'), ('PE', 'Peru'), ('LV', 'Latvia'), ('SN', 'Senegal'), ('EC', 'Ecuador'), ('CC', 'Cocos Islands'), ('RW', 'Rwanda'), ('AR', 'Argentina'), ('UY', 'Uruguay'), ('MZ', 'Mozambique'), ('PN', 'Pitcairn'), ('RU', 'Russian Federation'), ('BE', 'Belgium'), ('KE', 'Kenya'), ('TN', 'Tunisia'), ('VU', 'Vanuatu'), ('MP', 'Northern Mariana Islands'), ('JP', 'Japan'), ('GM', 'Gambia'), ('CZ', 'Czech Republic'), ('TH', 'Thailand'), ('MA', 'Morocco'), ('ZM', 'Zambia'), ('IR', 'Iran'), ('ST', 'Sao Tome'), ('LR', 'Liberia'), ('GW', 'Guinea-bissau'), ('MT', 'Malta'), ('OM', 'Oman'), ('ZA', 'South Africa'), ('GU', 'Guam'), ('UZ', 'Uzbekistan'), ('RO', 'Romania'), ('SG', 'Singapore'), ('YU', 'Yugoslavia'), ('NA', 'Namibia'), ('PG', 'Papua New Guinea'), ('BG', 'Bulgaria'), ('MV', 'Maldives'), ('CV', 'Cape Verde'), ('SM', 'San Marino'), ('NC', 'New Caledonia'), ('NL', 'Netherlands'), ('KY', 'Cayman Islands'), ('CN', 'China'), ('FO', 'Faroe Islands'), ('CU', 'Cuba'), ('NR', 'Nauru'), ('TT', 'Trinidad And Tobago'), ('FI', 'Finland'), ('CK', 'Cook Islands'), ('SL', 'Sierra Leone'), ('ZW', 'Zimbabwe'), ('JM', 'Jamaica'), ('KW', 'Kuwait'), ('MS', 'Montserrat'), ('LC', 'Saint Lucia'), ('SI', 'Slovenia'), ('SY', 'Syrian Arab Republic'), ('NO', 'Norway'), ('VN', 'Viet Nam'), ('JO', 'Jordan'), ('SO', 'Somalia'), ('EE', 'Estonia'), ('UA', 'Ukraine'), ('CF', 'Central African Rep'), ('FK', 'Falkland Islands (Malvinas)'), ('DM', 'Dominica'), ('PR', 'Puerto Rico'), ('HU', 'Hungary'), ('MG', 'Madagascar'), ('MD', 'Moldova'), ('DZ', 'Algeria'), ('AU', 'Australia'), ('DO', 'Dominican Republic'), ('KN', 'Saint Kitts And Nevis'), ('LB', 'Lebanon'), ('PA', 'Panama'), ('PW', 'Palau'), ('AL', 'Albania'), ('MN', 'Mongolia'), ('BA', 'Bosnia And Herzegowina'), ('BJ', 'Benin'), ('DJ', 'Djibouti'), ('ET', 'Ethiopia'), ('GY', 'Guyana'), ('SC', 'Seychelles'), ('BW', 'Botswana'), ('IL', 'Israel'), ('TW', 'Taiwan'), ('EG', 'Egypt'), ('AQ', 'Antarctica'), ('AN', 'Netherlands Antilles'), ('BN', 'Brunei Darussalam'), ('BY', 'Belarus'), ('MH', 'Marshall Islands'), ('VG', 'Virgin Islands (British)'), ('GR', 'Greece'), ('AD', 'Andorra'), ('PH', 'Philippines'), ('AI', 'Anguilla'), ('FR', 'France'), ('NZ', 'New Zealand'), ('BF', 'Burkina Faso'), ('MR', 'Mauritania'), ('IQ', 'Iraq'), ('NP', 'Nepal'), ('HK', 'Hong Kong'), ('LS', 'Lesotho'), ('NG', 'Nigeria'), ('WS', 'Samoa'), ('SE', 'Sweden'), ('LI', 'Liechtenstein'), ('CX', 'Christmas Island'), ('GD', 'Grenada'), ('MY', 'Malaysia'), ('KZ', 'Kazakhstan'), ('BO', 'Bolivia'), ('IT', 'Italy'), ('AF', 'Afghanistan')], max_length=30)),
                ('age', models.IntegerField(default=0)),
                ('date_of_birthday', models.DateTimeField()),
                ('about', models.CharField(max_length=120)),
                ('is_active', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Comments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('like', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Twits',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=400)),
                ('like', models.IntegerField(default=0)),
                ('repost', models.IntegerField(default=0)),
                ('answers', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='twits', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TwitsComments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('comments', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='microblog.comments')),
                ('tweets_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tweets', to='microblog.twits')),
            ],
        ),
        migrations.CreateModel(
            name='Retweets',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('tweets_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='retweets', to='microblog.twits')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='retweets', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Follower',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('followers', models.ManyToManyField(blank=True, related_name='subscribers', to=settings.AUTH_USER_MODEL)),
                ('subscriptions', models.ManyToManyField(blank=True, related_name='followings', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='comments',
            name='tweet',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='microblog.twits'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='subscriptions',
            field=models.ManyToManyField(blank=True, related_name='user_subscriptions', to='microblog.follower'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
