# Generated by Django 4.2.7 on 2023-12-21 14:29

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('sex', models.CharField(choices=[('M', 'Men'), ('W', 'Women')], max_length=1)),
                ('avatar', models.ImageField(blank=True, upload_to='avatars/')),
                ('country', models.CharField(choices=[('MD', 'Moldova'), ('LK', 'Sri Lanka'), ('BE', 'Belgium'), ('CN', 'China'), ('CF', 'Central African Rep'), ('PM', 'St.Pierre'), ('YU', 'Yugoslavia'), ('FI', 'Finland'), ('LB', 'Lebanon'), ('CZ', 'Czech Republic'), ('BJ', 'Benin'), ('AG', 'Antigua And Barbuda'), ('LT', 'Lithuania'), ('SI', 'Slovenia'), ('AT', 'Austria'), ('BH', 'Bahrain'), ('MV', 'Maldives'), ('PE', 'Peru'), ('FR', 'France'), ('PT', 'Portugal'), ('BN', 'Brunei Darussalam'), ('KE', 'Kenya'), ('MN', 'Mongolia'), ('MM', 'Myanmar'), ('LV', 'Latvia'), ('CC', 'Cocos Islands'), ('AF', 'Afghanistan'), ('ER', 'Eritrea'), ('GE', 'Georgia'), ('WS', 'Samoa'), ('KP', 'Korea (North)'), ('GF', 'French Guiana'), ('VC', 'St Vincent/Grenadines'), ('SR', 'Suriname'), ('KN', 'Saint Kitts And Nevis'), ('NC', 'New Caledonia'), ('AN', 'Netherlands Antilles'), ('CR', 'Costa Rica'), ('AI', 'Anguilla'), ('GR', 'Greece'), ('FK', 'Falkland Islands (Malvinas)'), ('SO', 'Somalia'), ('BS', 'Bahamas'), ('LR', 'Liberia'), ('LY', 'Libya'), ('PG', 'Papua New Guinea'), ('AS', 'American Samoa'), ('CK', 'Cook Islands'), ('EG', 'Egypt'), ('KY', 'Cayman Islands'), ('PH', 'Philippines'), ('VG', 'Virgin Islands (British)'), ('IR', 'Iran'), ('RO', 'Romania'), ('SK', 'Slovakia'), ('SM', 'San Marino'), ('MW', 'Malawi'), ('EC', 'Ecuador'), ('NO', 'Norway'), ('DO', 'Dominican Republic'), ('DK', 'Denmark'), ('TD', 'Chad'), ('TZ', 'Tanzania'), ('BR', 'Brazil'), ('IQ', 'Iraq'), ('TV', 'Tuvalu'), ('EH', 'Western Sahara'), ('MO', 'Macau'), ('GA', 'Gabon'), ('TR', 'Turkey'), ('RE', 'Reunion'), ('KM', 'Comoros'), ('NG', 'Nigeria'), ('NZ', 'New Zealand'), ('TG', 'Togo'), ('ZA', 'South Africa'), ('MQ', 'Martinique'), ('JP', 'Japan'), ('NL', 'Netherlands'), ('VU', 'Vanuatu'), ('MK', 'Macedonia'), ('GQ', 'Equatorial Guinea'), ('CA', 'Canada'), ('GI', 'Gibraltar'), ('FM', 'Micronesia'), ('AE', 'United Arab Emirates'), ('HK', 'Hong Kong'), ('LU', 'Luxembourg'), ('LI', 'Liechtenstein'), ('UY', 'Uruguay'), ('VE', 'Venezuela'), ('MR', 'Mauritania'), ('EE', 'Estonia'), ('IE', 'Ireland'), ('SZ', 'Swaziland'), ('CX', 'Christmas Island'), ('VN', 'Viet Nam'), ('CV', 'Cape Verde'), ('MT', 'Malta'), ('MP', 'Northern Mariana Islands'), ('MY', 'Malaysia'), ('BT', 'Bhutan'), ('SN', 'Senegal'), ('TW', 'Taiwan'), ('CO', 'Colombia'), ('IN', 'India'), ('SD', 'Sudan'), ('NI', 'Nicaragua'), ('IL', 'Israel'), ('GD', 'Grenada'), ('GL', 'Greenland'), ('PN', 'Pitcairn'), ('GW', 'Guinea-bissau'), ('BV', 'Bouvet Island'), ('MS', 'Montserrat'), ('NP', 'Nepal'), ('BG', 'Bulgaria'), ('PA', 'Panama'), ('TN', 'Tunisia'), ('UK', 'United Kingdom'), ('GU', 'Guam'), ('DE', 'Germany'), ('BA', 'Bosnia And Herzegowina'), ('AZ', 'Azerbaijan'), ('CL', 'Chile'), ('HT', 'Haiti'), ('AR', 'Argentina'), ('BY', 'Belarus'), ('KH', 'Cambodia'), ('NU', 'Niue'), ('ID', 'Indonesia'), ('KG', 'Kyrgyzstan'), ('QA', 'Qatar'), ('AD', 'Andorra'), ('ET', 'Ethiopia'), ('SB', 'Solomon Islands'), ('SY', 'Syrian Arab Republic'), ('TF', 'French S. Territories'), ('UZ', 'Uzbekistan'), ('CG', 'Congo'), ('PL', 'Poland'), ('PY', 'Paraguay'), ('KZ', 'Kazakhstan'), ('KW', 'Kuwait'), ('NR', 'Nauru'), ('OM', 'Oman'), ('TH', 'Thailand'), ('LC', 'Saint Lucia'), ('VI', 'Virgin Islands (U.S.)'), ('MZ', 'Mozambique'), ('YT', 'Mayotte'), ('BW', 'Botswana'), ('LA', 'Laos'), ('IT', 'Italy'), ('MG', 'Madagascar'), ('HN', 'Honduras'), ('ST', 'Sao Tome'), ('PR', 'Puerto Rico'), ('RW', 'Rwanda'), ('NE', 'Niger'), ('DM', 'Dominica'), ('FJ', 'Fiji'), ('CI', 'Cote D`ivoire'), ('KI', 'Kiribati'), ('SC', 'Seychelles'), ('SH', 'St. Helena'), ('UA', 'Ukraine'), ('ES', 'Spain'), ('BF', 'Burkina Faso'), ('GM', 'Gambia'), ('RU', 'Russian Federation'), ('SE', 'Sweden'), ('UG', 'Uganda'), ('GP', 'Guadeloupe'), ('TM', 'Turkmenistan'), ('HR', 'Croatia'), ('AM', 'Armenia'), ('ML', 'Mali'), ('BZ', 'Belize'), ('SA', 'Saudi Arabia'), ('CM', 'Cameroon'), ('KR', 'Korea (South)'), ('DJ', 'Djibouti'), ('SG', 'Singapore'), ('TT', 'Trinidad And Tobago'), ('MX', 'Mexico'), ('MA', 'Morocco'), ('US', 'United States'), ('SV', 'El Salvador'), ('HU', 'Hungary'), ('BD', 'Bangladesh'), ('NF', 'Norfolk Island'), ('ZR', 'Zaire'), ('BB', 'Barbados'), ('BM', 'Bermuda'), ('NA', 'Namibia'), ('TK', 'Tokelau'), ('ZW', 'Zimbabwe'), ('JO', 'Jordan'), ('AW', 'Aruba'), ('PW', 'Palau'), ('PK', 'Pakistan'), ('SL', 'Sierra Leone'), ('CU', 'Cuba'), ('VA', 'Vatican City State'), ('JM', 'Jamaica'), ('MU', 'Mauritius'), ('BO', 'Bolivia'), ('IS', 'Iceland'), ('BI', 'Burundi'), ('DZ', 'Algeria'), ('TP', 'East Timor'), ('YE', 'Yemen'), ('PF', 'French Polynesia'), ('GN', 'Guinea'), ('LS', 'Lesotho'), ('MC', 'Monaco'), ('MH', 'Marshall Islands'), ('GY', 'Guyana'), ('AQ', 'Antarctica'), ('CY', 'Cyprus'), ('AL', 'Albania'), ('GH', 'Ghana'), ('GT', 'Guatemala'), ('AO', 'Angola'), ('TJ', 'Tajikistan'), ('ZM', 'Zambia'), ('AU', 'Australia'), ('CH', 'Switzerland'), ('FO', 'Faroe Islands'), ('TO', 'Tonga')], max_length=100)),
                ('age', models.IntegerField(default=0)),
                ('date_of_birthday', models.DateTimeField(auto_now_add=True)),
                ('about', models.CharField(max_length=120)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Comments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('like', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Twits',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=400)),
                ('like', models.IntegerField(default=0)),
                ('repost', models.IntegerField(default=0)),
                ('answers', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='twits', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TwitsComments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('comments', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='microblog.comments')),
                ('tweets_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tweets', to='microblog.twits')),
            ],
        ),
        migrations.CreateModel(
            name='Retweets',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('tweets_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='retweets', to='microblog.twits')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='retweets', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Follower',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('followers', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='followers', to=settings.AUTH_USER_MODEL)),
                ('subscriptions', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscribers', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='comments',
            name='tweet',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='microblog.twits'),
        ),
    ]
